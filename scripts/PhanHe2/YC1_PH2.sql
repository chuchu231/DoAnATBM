alter session set "_ORACLE_SCRIPT"=true;
CREATE ROLE RL_NHANVIEN;
CREATE ROLE RL_GIANGVIEN;
CREATE ROLE RL_GIAOVU;
CREATE ROLE RL_TRUONGBM;
CREATE ROLE RL_TRUONGKHOA;
CREATE ROLE RL_SINHVIEN;
--SELECT * FROM DBA_POLICIES;
--Tao cac user là SINHVIEN

CREATE OR REPLACE PROCEDURE USP_CREATESINHVIEN
AS
    CURSOR CUR IS (SELECT MASV
                    FROM ADMIN.SINHVIEN
                    WHERE MASV NOT IN (SELECT USERNAME
                                        		      FROM ALL_USERS)
                    );
    STRSQL VARCHAR(2000);
    USR VARCHAR2(5);
BEGIN
    OPEN CUR;
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE';
    EXECUTE IMMEDIATE(STRSQL);
    LOOP
        FETCH CUR INTO USR;
        EXIT WHEN CUR%NOTFOUND;
            
        STRSQL := 'CREATE USER '||USR||' IDENTIFIED BY '||USR;
        EXECUTE IMMEDIATE(STRSQL);
        STRSQL := 'GRANT CONNECT TO '||USR;
        EXECUTE IMMEDIATE(STRSQL);
    END LOOP;
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = FALSE';
    EXECUTE IMMEDIATE(STRSQL);
    CLOSE CUR;
END;
/
EXEC USP_CREATESINHVIEN;

--Cap role cho SINHVIEN
CREATE OR REPLACE PROCEDURE USP_GRANTROLESV
AS
    CURSOR CUR IS (SELECT MASV
                    FROM ADMIN.SINHVIEN);
    STRSQL VARCHAR(2000);
    USR VARCHAR2(5);
BEGIN
    OPEN CUR;
    LOOP
        FETCH CUR INTO USR;
        EXIT WHEN CUR%NOTFOUND;
        
        STRSQL := 'GRANT RL_SINHVIEN TO '||USR;
        EXECUTE IMMEDIATE (STRSQL);
    END LOOP;
    CLOSE CUR;
END;
/
EXEC USP_GRANTROLESV;

--Tao cac user NHANSU
CREATE OR REPLACE PROCEDURE USP_CREATENHANSU
AS
    CURSOR CUR IS (SELECT MANV
                    FROM ADMIN.NHANSU
                    WHERE MANV NOT IN (SELECT USERNAME
                                        		      FROM ALL_USERS)
                    );
    STRSQL VARCHAR(2000);
    USR VARCHAR2(5);
BEGIN
    OPEN CUR;
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE';
    EXECUTE IMMEDIATE(STRSQL);
    LOOP
        FETCH CUR INTO USR;
        EXIT WHEN CUR%NOTFOUND;
            
        STRSQL := 'CREATE USER '||USR||' IDENTIFIED BY '||USR;
        EXECUTE IMMEDIATE(STRSQL);
        STRSQL := 'GRANT CONNECT TO '||USR;
        EXECUTE IMMEDIATE(STRSQL);
    END LOOP;
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = FALSE';
    EXECUTE IMMEDIATE(STRSQL);
    CLOSE CUR;
END;
/
EXEC USP_CREATENHANSU;
--Cap role cho NHANSU
CREATE OR REPLACE PROCEDURE USP_GRANTROLE_NS
    (STRROLE VARCHAR, VT NVARCHAR2)
AS
    CURSOR CUR IS (SELECT MANV
                    FROM ADMIN.NHANSU
                    WHERE MANV IN (SELECT USERNAME
                                        FROM ALL_USERS)
                    AND VAITRO = VT);
    STRSQL VARCHAR(2000);
    USR VARCHAR2(5);
BEGIN
    OPEN CUR;
    LOOP
        FETCH CUR INTO USR;
        EXIT WHEN CUR%NOTFOUND;
        
        STRSQL := 'GRANT '||STRROLE||' TO '||USR;
        EXECUTE IMMEDIATE (STRSQL);
    END LOOP;
    CLOSE CUR;
END;
/
EXEC USP_GRANTROLE_NS ('RL_NHANVIEN', 'Nhan vien');
EXEC USP_GRANTROLE_NS ('RL_GIANGVIEN', 'Giang vien');
EXEC USP_GRANTROLE_NS ('RL_GIAOVU', 'Giao vu');
EXEC USP_GRANTROLE_NS ('RL_TRUONGKHOA', 'Truong khoa');
EXEC USP_GRANTROLE_NS ('RL_TRUONGBM', 'Truong don vi');


--Viet function lay role
CREATE OR REPLACE FUNCTION GETROLE_BYUSERNAME
(USERNAME VARCHAR2) 
RETURN VARCHAR2 
AS
    v_role VARCHAR2(30);
BEGIN    
    IF (USERNAME = 'admin') THEN 
        v_role := 'ADMIN';
    ELSE
        SELECT GRANTED_ROLE INTO v_role
        FROM DBA_ROLE_PRIVS
        WHERE GRANTEE = USERNAME AND GRANTED_ROLE != 'CONNECT';
    END IF;
    
    RETURN v_role;
END;
/

set serveroutput on;
DECLARE
    v_role VARCHAR2(30);
BEGIN
    v_role := GETROLE_BYUSERNAME('SV04');
    DBMS_OUTPUT.PUT_LINE('Role: ' || v_role);
END;
/

--Cap quyen tren bang NHANSU
CREATE OR REPLACE FUNCTION SELECT_NHANSU_FUNCTION 
(P_SCHEMA VARCHAR2, P_OBJ VARCHAR2) 
RETURN VARCHAR2 
AS 
    USER VARCHAR(100); 
    ROLE VARCHAR(20);
BEGIN 
    USER := SYS_CONTEXT('USERENV', 'SESSION_USER');
    ROLE := GETROLE_BYUSERNAME(USER);
    IF ROLE = 'RL_TRUONGKHOA' THEN
        RETURN '1=1';
    ELSE
        RETURN 'MANV = ''' || USER || '''';
    END IF;  
END;
/


BEGIN
	dbms_rls.add_policy(
    	OBJECT_SCHEMA =>'ADMIN',
    	OBJECT_NAME=>'NHANSU',
    	POLICY_NAME =>'SELECT_NHANSU_POLICY',
    	POLICY_FUNCTION=>'SELECT_NHANSU_FUNCTION',
    	STATEMENT_TYPES=>'SELECT, UPDATE',
    	UPDATE_CHECK => TRUE
	);
END;
/
GRANT SELECT ON ADMIN.NHANSU TO RL_NHANVIEN;
GRANT UPDATE(DT) ON ADMIN.NHANSU TO RL_NHANVIEN;
GRANT RL_NHANVIEN TO RL_GIANGVIEN;
GRANT RL_NHANVIEN TO RL_TRUONGKHOA;
GRANT RL_NHANVIEN TO RL_GIAOVU;
GRANT RL_NHANVIEN TO RL_TRUONGBM;
GRANT INSERT, DELETE, UPDATE ON ADMIN.NHANSU TO RL_TRUONGKHOA;

--Cap quyen tren bang DONVI
GRANT SELECT ON ADMIN.DONVI TO RL_NHANVIEN;
GRANT INSERT, UPDATE ON ADMIN.DONVI TO RL_GIAOVU;

--Cap quyen tren bang HOCPHAN
GRANT SELECT ON ADMIN.HOCPHAN TO RL_NHANVIEN, RL_SINHVIEN;
GRANT INSERT, UPDATE ON ADMIN.HOCPHAN TO RL_GIAOVU;

--Cap quyen tren bang KHMO
CREATE OR REPLACE FUNCTION SELECT_KHMO_FUNCTION (
    P_SCHEMA VARCHAR2,
    P_OBJ VARCHAR2
) RETURN VARCHAR2 AS
    USER VARCHAR(100); 
    ROLE VARCHAR(20);
    MA VARCHAR2(10);
BEGIN
    USER := SYS_CONTEXT('USERENV', 'SESSION_USER');
    ROLE := GETROLE_BYUSERNAME (USER);    
    IF ROLE = 'RL_SINHVIEN' THEN
        --LAY MA CHUONG TRINH CUA SINH VIEN
        SELECT MACT
        INTO MA
        FROM ADMIN.SINHVIEN
        WHERE MASV = SYS_CONTEXT('USERENV', 'SESSION_USER');
        RETURN 'MACT = '''|| MA ||'''';
    ELSE
        RETURN '1=1';
    END IF;
END;
/

BEGIN
	dbms_rls.add_policy(
    	OBJECT_SCHEMA =>'ADMIN',
    	OBJECT_NAME=>'KHMO',
    	POLICY_NAME =>'SELECT_KHMO_POLICY',
    	POLICY_FUNCTION=>'SELECT_KHMO_FUNCTION',
    	STATEMENT_TYPES=>'SELECT',
    	UPDATE_CHECK => TRUE
	);
END;
/
GRANT SELECT ON ADMIN.KHMO TO RL_NHANVIEN, RL_SINHVIEN;
GRANT INSERT, UPDATE ON ADMIN.KHMO TO RL_GIAOVU;

--Cap quyen tren bang SINHVIEN
CREATE OR REPLACE FUNCTION SELECT_SINHVIEN_FUNCTION 
(P_SCHEMA VARCHAR2, P_OBJ VARCHAR2) 
RETURN VARCHAR2 
AS 
    USER VARCHAR(100); 
    ROLE VARCHAR(20);
BEGIN 
    USER := SYS_CONTEXT('USERENV', 'SESSION_USER');
    ROLE := GETROLE_BYUSERNAME (USER); 
    IF ROLE = 'RL_SINHVIEN' THEN
        RETURN 'MASV = ''' || USER || '''';
    ELSE
        RETURN '1=1';
    END IF;
END;
/

BEGIN
	dbms_rls.add_policy(
    	OBJECT_SCHEMA =>'ADMIN',
    	OBJECT_NAME=>'SINHVIEN',
    	POLICY_NAME =>'SELECT_SINHVIEN_POLICY',
    	POLICY_FUNCTION=>'SELECT_SINHVIEN_FUNCTION',
    	STATEMENT_TYPES=>'SELECT, UPDATE',
    	UPDATE_CHECK => TRUE
	);
END;
/
GRANT SELECT ON ADMIN.SINHVIEN TO RL_NHANVIEN, RL_SINHVIEN;
GRANT UPDATE(DCHI, DT) ON ADMIN.SINHVIEN TO RL_SINHVIEN;
GRANT INSERT, UPDATE, DELETE ON ADMIN.SINHVIEN TO RL_GIAOVU;

CREATE OR REPLACE PROCEDURE ADMIN.UPDATE_STUDENT (DCHI NVARCHAR2, DT NVARCHAR2)
AS
    STRSQL VARCHAR(2000);
BEGIN
    IF DCHI IS NULL OR DCHI = '' THEN
        RAISE_APPLICATION_ERROR(-20001, 'Thông tin ??a ch? không ???c ?? tr?ng');
    END IF;
    IF DT IS NULL OR DT = '' THEN
        RAISE_APPLICATION_ERROR(-20002, 'Thông tin s? ?i?n tho?i không ???c ?? tr?ng');
    END IF;
    STRSQL := 'UPDATE ADMIN.SINHVIEN SET DCHI = '''|| DCHI || '''';
    EXECUTE IMMEDIATE (STRSQL);
    STRSQL := 'UPDATE ADMIN.SINHVIEN SET DT = '''|| DT || '''';
    EXECUTE IMMEDIATE (STRSQL);
END;
/

GRANT EXECUTE ON ADMIN.UPDATE_STUDENT TO RL_SINHVIEN;
--Cap quyen cho bang DANGKY
CREATE OR REPLACE FUNCTION SELECT_DANGKY_FUNCTION 
(P_SCHEMA VARCHAR2, P_OBJ VARCHAR2) 
RETURN VARCHAR2 
AS 
    USER VARCHAR(100);
    ROLE VARCHAR(20);
BEGIN 
    USER:= SYS_CONTEXT('USERENV','SESSION_USER'); 
    ROLE := GETROLE_BYUSERNAME (USER); 
    IF (ROLE IN ('RL_GIANGVIEN', 'RL_TRUONGBM')) THEN
        RETURN 'MAGV = '''|| USER ||''''; 
    ELSIF (ROLE = 'RL_SINHVIEN') THEN
        RETURN 'MASV = '''|| USER ||''''; 
    ELSE
        RETURN '1=1';
    END IF;   
END;
/

CREATE OR REPLACE FUNCTION UPDATE_DANGKY_FUNCTION 
(P_SCHEMA VARCHAR2, P_OBJ VARCHAR2) 
RETURN VARCHAR2 
AS 
    USER VARCHAR(100);
    ROLE VARCHAR(20);
BEGIN 
    USER:= SYS_CONTEXT('USERENV','SESSION_USER'); 
    ROLE := GETROLE_BYUSERNAME (USER); 
    IF (ROLE IN ('RL_GIANGVIEN', 'RL_TRUONGBM', 'RL_TRUONGKHOA')) THEN
        RETURN 'MAGV = '''|| USER ||''''; 
    ELSE
        RETURN '1=0';
    END IF;   
END;
/

BEGIN
	dbms_rls.add_policy(
    	OBJECT_SCHEMA =>'ADMIN',
    	OBJECT_NAME=>'DANGKY',
    	POLICY_NAME =>'SELECT_DANGKY_POLICY',
    	POLICY_FUNCTION=>'SELECT_DANGKY_FUNCTION',
    	STATEMENT_TYPES=>'SELECT,DELETE,INSERT',
        UPDATE_CHECK => TRUE
	);
END;
/

BEGIN
	dbms_rls.add_policy(
    	OBJECT_SCHEMA =>'ADMIN',
    	OBJECT_NAME=>'DANGKY',
    	POLICY_NAME =>'UPDATE_DANGKY_POLICY',
    	POLICY_FUNCTION=>'UPDATE_DANGKY_FUNCTION',
    	STATEMENT_TYPES=>'UPDATE',
        UPDATE_CHECK => TRUE
	);
END;
/

BEGIN
	dbms_rls.drop_policy(
    	OBJECT_SCHEMA =>'ADMIN',
    	OBJECT_NAME=>'DANGKY',
    	POLICY_NAME =>'SELECT_DANGKY_POLICY'
	);
END;
/

GRANT SELECT ON ADMIN.DANGKY TO RL_GIANGVIEN;
GRANT SELECT ON ADMIN.DANGKY TO RL_SINHVIEN;
GRANT UPDATE(DIEMTH, DIEMQT, DIEMCK, DIEMTK) ON ADMIN.DANGKY TO RL_GIANGVIEN;
GRANT RL_GIANGVIEN TO RL_TRUONGKHOA;
GRANT RL_GIANGVIEN TO RL_TRUONGBM;
GRANT INSERT, DELETE ON ADMIN.DANGKY TO RL_GIAOVU, RL_SINHVIEN;

-------PHANCONG
create or replace VIEW ADMIN.UV_GV_Phancong 
AS
    SELECT *
    FROM ADMIN.PHANCONG PC
    WHERE PC.MAGV = SYS_CONTEXT('USERENV', 'SESSION_USER');
/
create or replace VIEW ADMIN.UV_Quanly_Phancong 
AS
    SELECT gv.manv, DV.madv, pc.hk, pc.nam, pc.mahp, pc.mact
    FROM ADMIN.NHANSU GV, ADMIN.DONVI DV, ADMIN.PHANCONG PC, ADMIN.HOCPHAN HP
    WHERE dv.madv = 'VPK' AND HP.MAHP = PC.MAHP AND HP.MADV = DV.MADV AND PC.MAGV  = GV.MANV;
/
CREATE OR REPLACE VIEW ADMIN.UV_TRGDV_QUANLY_PHANCONG
AS
    SELECT PC.MAGV,DV.MADV, HP.MAHP, PC.HK, PC.NAM, PC.MACT
    FROM ADMIN.PHANCONG PC JOIN ADMIN.HOCPHAN HP ON HP.MAHP= PC.MAHP
     JOIN ADMIN.DONVI DV ON DV.MADV = HP.MADV
    WHERE DV.TRGDV = SYS_CONTEXT('USERENV', 'SESSION_USER');
/
CREATE OR REPLACE VIEW ADMIN.UV_TRGDV_PHANCONG
AS
    SELECT gv.manv, pc.hk, pc.nam, pc.mahp, pc.mact
    FROM ADMIN.NHANSU GV JOIN ADMIN.DONVI DV ON dv.madv = gv.madv 
        JOIN ADMIN.PHANCONG PC ON gv.manv =pc.magv
    WHERE DV.TRGDV = SYS_CONTEXT('USERENV', 'SESSION_USER');
/


GRANT SELECT ON ADMIN.UV_GV_Phancong  TO RL_GIANGVIEN;
/
GRANT SELECT, UPDATE ON ADMIN.UV_Quanly_Phancong TO RL_GIAOVU;
GRANT SELECT, UPDATE ON ADMIN.UV_Quanly_Phancong TO RL_GIAOVU;
/
GRANT SELECT, UPDATE, DELETE, INSERT ON ADMIN.UV_TRGDV_QUANLY_PHANCONG TO RL_TRUONGBM;
GRANT SELECT ON ADMIN.UV_TRGDV_PHANCONG TO RL_TRUONGBM;


----PHANCONG (TruongKhoa)
create or replace view TRK_PHANCONG_VIEW 
as
select * from PHANCONG
where MAHP in (select MAHP from HOCPHAN where MADV = 'VPK');


grant select on TRK_PHANCONG_VIEW to RL_TRUONGKHOA;
grant insert on TRK_PHANCONG_VIEW to RL_TRUONGKHOA;
grant update on TRK_PHANCONG_VIEW to RL_TRUONGKHOA;
grant delete on TRK_PHANCONG_VIEW to RL_TRUONGKHOA;



